//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.6.3.0 (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace NPS.ID.PublicApi.Models
{
    #pragma warning disable // Disable all warnings

    /// <summary>A contract can be available in many delivery areas, and for each delivery area it can have different opening and closing times. So for each area state, openAt and closeAt times are defined.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public partial class DeliveryAreaState 
    {
        [Newtonsoft.Json.JsonProperty("dlvryAreaId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DlvryAreaId { get; set; }
    
        /// <summary>State of the area: HIBE, IACT ACTI. Supposed to be ACTI for a tradeable area.</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DeliveryAreaStateState State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("openAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset OpenAt { get; set; }
    
        [Newtonsoft.Json.JsonProperty("closedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset ClosedAt { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static DeliveryAreaState FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<DeliveryAreaState>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public partial class ContractRow 
    {
        /// <summary>Unique identifier for a contract</summary>
        [Newtonsoft.Json.JsonProperty("contractId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractId { get; set; }
    
        /// <summary>A more user friendly name for the contract (PH,QH,HH... etc)</summary>
        [Newtonsoft.Json.JsonProperty("contractName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractName { get; set; }
    
        /// <summary>State of the contract:ACTI: Active, IACT: Expired(will never be reopened), HIBE: Closed(can be reopened)</summary>
        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ContractRowState State { get; set; }
    
        [Newtonsoft.Json.JsonProperty("durationSeconds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DurationSeconds { get; set; }
    
        [Newtonsoft.Json.JsonProperty("resolutionSeconds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long ResolutionSeconds { get; set; }
    
        /// <summary>When a custom block order is entered, a new contract is created for that time interval if it does not already exist, in which case predefined would be false.</summary>
        [Newtonsoft.Json.JsonProperty("predefined", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Predefined { get; set; }
    
        /// <summary>If false: update information with the contents received, If true: delete entity indicated in the message.</summary>
        [Newtonsoft.Json.JsonProperty("deleted", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Deleted { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dlvryStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset DlvryStart { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dlvryEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset DlvryEnd { get; set; }
    
        /// <summary>A contract can be available in many delivery areas, and for each delivery area it can have different opening and closing times. So for each area state, openAt and closeAt times are defined.</summary>
        [Newtonsoft.Json.JsonProperty("dlvryAreaState", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<DeliveryAreaState> DlvryAreaState { get; set; }
    
        /// <summary>Id of the market that this contract belongs to, for example a code for XBID market.</summary>
        [Newtonsoft.Json.JsonProperty("marketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MarketId { get; set; }
    
        /// <summary>Short display name for contract</summary>
        [Newtonsoft.Json.JsonProperty("shortDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ShortDisplayName { get; set; }
    
        /// <summary>Medium length display name for contract</summary>
        [Newtonsoft.Json.JsonProperty("mediumDisplayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string MediumDisplayName { get; set; }
    
        /// <summary>Type of product that this contract belongs to</summary>
        [Newtonsoft.Json.JsonProperty("productType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ContractRowProductType ProductType { get; set; }
    
        /// <summary>Id of product that this contract belongs to</summary>
        [Newtonsoft.Json.JsonProperty("productId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ProductId { get; set; }
    
        /// <summary>Last modification time (status change) of data</summary>
        [Newtonsoft.Json.JsonProperty("updatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedAt { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static ContractRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<ContractRow>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public enum DeliveryAreaStateState
    {
        [System.Runtime.Serialization.EnumMember(Value = "HIBE")]
        HIBE = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "IACT")]
        IACT = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "ACTI")]
        ACTI = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public enum ContractRowState
    {
        [System.Runtime.Serialization.EnumMember(Value = "HIBE")]
        HIBE = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "IACT")]
        IACT = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "ACTI")]
        ACTI = 2,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public enum ContractRowProductType
    {
        [System.Runtime.Serialization.EnumMember(Value = "P15MIN")]
        P15MIN = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = "P30MIN")]
        P30MIN = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "P60MIN")]
        P60MIN = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "BLOCK_2H")]
        BLOCK_2H = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = "BLOCK_4H")]
        BLOCK_4H = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = "DON")]
        DON = 5,
    
        [System.Runtime.Serialization.EnumMember(Value = "DB34")]
        DB34 = 6,
    
        [System.Runtime.Serialization.EnumMember(Value = "DP")]
        DP = 7,
    
        [System.Runtime.Serialization.EnumMember(Value = "DEP")]
        DEP = 8,
    
        [System.Runtime.Serialization.EnumMember(Value = "DB")]
        DB = 9,
    
        [System.Runtime.Serialization.EnumMember(Value = "CUSTOM_BLOCK")]
        CUSTOM_BLOCK = 10,
    
    }
}