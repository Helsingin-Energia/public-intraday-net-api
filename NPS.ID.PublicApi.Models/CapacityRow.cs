//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.6.3.0 (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace NPS.ID.PublicApi.Models
{
    #pragma warning disable // Disable all warnings

    /// <summary>Capacity information between areas</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public partial class CapacityRow 
    {
        [Newtonsoft.Json.JsonProperty("eventSequenceNo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int EventSequenceNo { get; set; }
    
        /// <summary>true - capacity data produced by internal Nord Pool Matcher. false - capacity data came</summary>
        [Newtonsoft.Json.JsonProperty("internal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Internal { get; set; }
    
        [Newtonsoft.Json.JsonProperty("publicationTime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset PublicationTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DeliveryAreaFrom { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DeliveryAreaTo { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DeliveryAreaStart { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DeliveryAreaEnd { get; set; }
    
        [Newtonsoft.Json.JsonProperty("inCapacity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int InCapacity { get; set; }
    
        [Newtonsoft.Json.JsonProperty("outCapacity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int OutCapacity { get; set; }
    
        /// <summary>Last modification time (status change) of data</summary>
        [Newtonsoft.Json.JsonProperty("updatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedAt { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static CapacityRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<CapacityRow>(data);
        }
    }
}