//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.6.3.0 (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace NPS.ID.PublicApi.Models
{
    #pragma warning disable // Disable all warnings

    /// <summary>Provides a list of contracts available in the area with id <deliveryAreaId> and aggregated statistical data for each contract.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public partial class PublicStatisticRow 
    {
        [Newtonsoft.Json.JsonProperty("lastPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? LastPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? LastQuantity { get; set; }
    
        /// <summary>Time of the last trade</summary>
        [Newtonsoft.Json.JsonProperty("lastTradeTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastTradeTime { get; set; }
    
        [Newtonsoft.Json.JsonProperty("highestPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? HighestPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lowestPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? LowestPrice { get; set; }
    
        [Newtonsoft.Json.JsonProperty("vwap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Vwap { get; set; }
    
        [Newtonsoft.Json.JsonProperty("turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? Turnover { get; set; }
    
        [Newtonsoft.Json.JsonProperty("dayAheadPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long? DayAheadPrice { get; set; }
    
        /// <summary>UP - Last price is higher than a previous price, DOWN - Last price is lower than a previous price, EQUAL - Last price is equal to a previous price</summary>
        [Newtonsoft.Json.JsonProperty("tendency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PublicStatisticRowTendency? Tendency { get; set; }
    
        [Newtonsoft.Json.JsonProperty("deliveryAreaId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public long DeliveryAreaId { get; set; }
    
        /// <summary>Identifier for a contract</summary>
        [Newtonsoft.Json.JsonProperty("contractId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ContractId { get; set; }
    
        /// <summary>Last modification time (status change) of data</summary>
        [Newtonsoft.Json.JsonProperty("updatedAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedAt { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static PublicStatisticRow FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<PublicStatisticRow>(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.6.3.0")]
    public enum PublicStatisticRowTendency
    {
        [System.Runtime.Serialization.EnumMember(Value = "UP")]
        UP = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = "DOWN")]
        DOWN = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = "EQUAL")]
        EQUAL = 3,
    
    }
}